; Try to find sensitivity with RÃ©mi's script 
; Do all sources of a project at a time
; with the same method as pipe8
; Do all scans with new lissopt
; Copied from Labtools/FXD/Run8/Pro/Liss_pipe.scr

; give in the AllScanLissPipeV1.scr script
; project_name 
; vall
; badscan

sav = 'v2'  ; do not change
restore, file = '$NIKA_SAVE_DIR/Log_Iram_tel_' + sav + '.save'
; If this file does not exist, must be copied from
; Pipeline/Datamanage/Logbook/

gdsc = where( strtrim(scan.projid, 2) eq project_name and $
              strupcase( scan.obstype) eq 'LISSAJOUS' and $
              scan.tau1mm gt 0 and scan.skynoi1mm4 ne 0, ngdsc)
obj = strtrim( strupcase(scan[ gdsc].object), 2)
iobjsort = sort( obj)
indna = uniq( obj[iobjsort])
nameobj = obj[ iobjsort[ indna]]
nobj = n_elements( nameobj)
; To start do
if keyword_set( k_idone) then idone = k_idone $
  else idone = replicate( (-1), nobj)
inored = replicate( 0, nobj)
inomap = replicate( 0,  nobj)

for iobj = 0, nobj-1 do begin
   source = nameobj[ iobj]       ;Name of the source
   version = vall + strtrim( iobj, 2) ; done on my computer
   print, 'Start source '+source+ ' of the project '+project_name
   print, 'Obj # ', iobj, ' out of ', nobj
   ind = where( obj eq source, nind)
   if nind eq 0 then message, 'That should not happen, check object names'
   scan_num_list = scan[ gdsc[ ind]].scannum
   day_list = scan[ gdsc[ ind]].day
   scl = bytarr( nind)
   if badscan[0] ne '0' then begin
      match, day_list+'s'+strtrim( scan_num_list, 2), badscan, ia, ib
      scl[ ia] = 1
   endif
   if idone[ iobj] ge 0  $
     then scl[0:idone[ iobj] < (nind-1)] = 1 
; scans already checked but leave the last valid one in
   gsc = where( scl eq 0, ngsc)
   if ngsc eq 0 then begin
      print, 'Nothing to be reduced with that source '+ source
      continue
   endif
   scan_num_list = scan_num_list[ gsc]
   day_list = day_list[ gsc]
; Determine if it is a strong source by the integration time minimum
   expti = scan[ gdsc[ind[gsc]]].exptime
   if ngsc gt 1 then medinteg = min( expti) else medinteg = expti

name4file = STRJOIN(STRSPLIT(source,/EXTRACT),'_') ;Name without space but '_'

;;------- The directory where to save the results
project_dir = !nika.save_dir+'/Project_winter2014/'+ project_name
direxist = FILE_TEST(project_dir, /DIRECTORY)
if (direxist lt 1) then spawn, "mkdir -p "+project_dir                 

;;------- My analysis parameters
;; size_map_x = 250.0 ; set in AllScanLissPiperV1 script
;; size_map_y = 250.0
reso = 2.0
decor_mode = 'LISSOPT'
; d_min = 20.0   ; set in AllScanLissPiperV1 script
d_perscan = 1 ; 1 = no fake subscan
nbloc_min = 15
nsig_bloc = 2
;; apply_filter = 1 ; 1 filtering ; No filtering outside lissopt
;; cos_sin = 1
apply_filter = 0 ; no filtering 
cos_sin = 0
;;------- Do you want something specific
sens_per_kid = 0  ; no map per kid (heavy)
rm_toi = 1                       
rm_bp = 1                   
rm_fp = 1                   
rm_uc = 1 
k_azel = azel  ; by default
noscanred = inored[ iobj]
if noscanred eq 1 then message, /info, 'Only maps are done, after one scan'

; For strong sources look for the best position
allow_shift = 0
if medinteg lt 150. then begin
   allow_shift = 1  ; Look for the exact position of the source
   k_azel = 1  ; do it in Azel for the pointing model
endif
if inomap[ iobj] eq 0 then begin
   if not keyword_set( onescan) then begin 
      nika_pipe_launch_all_scan, scan_num_list, day_list, $
                           dir_plot=project_dir, $         
                           version=version,$               
                           size_map_x=size_map_x,$         
                           size_map_y=size_map_y,$         
                           reso=reso,$                     
                           decor=decor_mode,$              
                           nsig_bloc=nsig_bloc,$          
                           nbloc_min=nbloc_min,$           
                           d_min=d_min,$                   
                           d_perscan=d_perscan,$
                           apply_filter=apply_filter,$     
                           low_cut_filter=low_cut_filter,$ 
                           cos_sin=cos_sin,$               
                           rm_toi=rm_toi,$                       
                           rm_bp=rm_bp,$                   
                           rm_fp=rm_fp,$                   
                           rm_uc=rm_uc,$                   
                           sens_per_kid=sens_per_kid,$
                           no_flag=no_flag, silent = k_silent, $
                           azel = k_azel, $
                              noscanred = noscanred, $
                              allow_shift = allow_shift, $
                              flag_holes = flag_holes, $
                                 filtfact = [ffi1mm, ffi2mm]
   endif else begin
      u = where( day_list+'s'+strtrim(scan_num_list, 2)eq onescan, nu)
      if nu ne 1 then stop, 'That scan not found '+ onescan
      nika_pipe_launch_all_scan, scan_num_list[u[0]], day_list[u[0]], $
                           dir_plot=project_dir, $         
                           version=version,$               
                           size_map_x=size_map_x,$         
                           size_map_y=size_map_y,$         
                           reso=reso,$                     
                           decor=decor_mode,$              
                           nsig_bloc=nsig_bloc,$          
                           nbloc_min=nbloc_min,$           
                           d_min=d_min,$                   
                           d_perscan=d_perscan,$
                           apply_filter=apply_filter,$     
                           low_cut_filter=low_cut_filter,$ 
                           cos_sin=cos_sin,$               
                           rm_toi=rm_toi,$                       
                           rm_bp=rm_bp,$                   
                           rm_fp=rm_fp,$                   
                           rm_uc=rm_uc,$                   
                           sens_per_kid=sens_per_kid,$
                           no_flag=no_flag, silent = k_silent, $
                           azel = k_azel, $
                              noscanred = noscanred, $
                              allow_shift = allow_shift, $
                              flag_holes = flag_holes, $
                                 filtfact = [ffi1mm, ffi2mm]
      

   endelse
endif                           ; end case of no map at all for that object
endfor


